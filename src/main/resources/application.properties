spring.application.name=PartTimer

#postgres now using transaction pooler
spring.datasource.url=jdbc:postgresql://aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres
#spring.datasource.url=jdbc:postgresql://aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres?sslmode=require
#spring.datasource.url=jdbc:postgresql://aws-0-us-west-1.pooler.supabase.com:5432/postgres

server.port= 9999

#spring.datasource.username=postgres.vezvcomkjjoihpqyegid
spring.datasource.username=postgres.vezvcomkjjoihpqyegid
#spring.datasource.password=15.8.1.021
#spring.datasource.username=${DB_USERNAME}
#spring.datasource.password=${DB_PASSWORD}
#spring.datasource.username=postgres.vezvcomkjjoihpqyegid
spring.datasource.password=wQvYw6NSLof6SFmh

logging.level.com.zaxxer.hikari=DEBUG
logging.level.org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl=ERROR

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.hbm2ddl.auto=validate
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#logging
logging.level.org.springframework.web=DEBUG
logging.level.com.example.PartTimer=DEBUG
#logging.level.org.springframework.beans.factory.support=DEBUG


#jwt
security.jwt.secret-key = CiMa8shP2/6wvP6fPOzLSQ8O6RjvreE3GEaLNyakVAm057Y37bIBYUmObtVJ8MPu/6R0rZn8hDAVmrXFLZjQkw==
security.jwt.expiration-time = 172800000

# Enable error handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

#resend
resend.api.key=re_2oUvUkJs_FjLgCPdmyExHSNjatSF8LoXz
resend.from.email=Interface <onboarding@resend.dev>

#google oauth2
spring.security.oauth2.client.registration.google.client-id=1023404547999-ri41s1n769bhi5cgetgd274a90qp9km3.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

#stripe
stripe.secretKey = sk_test_51QRCSY2KrknwI1uDzYcw1Y081tWAc04ZKwu6edQDQuKRWlbwQrKMoG9lZu0L1wX5e1i7GgBFpiDl4USEx6irmBSu00OmMIiGe9
stripe.publishableKey = pk_test_51QRCSY2KrknwI1uDyRSnqfdAtXtXA4kSYLluzjV0WJ1Qqp3DHoh77RqBfE0sYFJ5RpJaVRhXuUbN2ejSyC5Kv6t200BA6PxhXr
stripe.webhook.secret =  whsec_f64da1ff979c8a32c700ef72075b8e827a292d76163d3cd504226d9e79c721eb
